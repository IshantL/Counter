{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","counter","setCounter","maxValue","className","onClick","type","min","max","onChange","e","value","parseInt","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oLAAe,I,YC+BAA,MA5Bf,WAEE,MAA8BC,mBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAgCF,mBAAS,KAAzC,mBAAOG,EAAP,KAgBA,OAhBA,KAiBE,sBAAKC,UAAU,kBAAf,UACI,wBAASA,UAAU,YAAYC,QAXlB,WAChBH,EAAWD,EAAU,IAUlB,eACA,uBAAOK,KAAM,SAASC,IAAI,IAAIC,IAAI,OAAOJ,UAAU,aAAaK,SAR5C,SAACC,GACxB,IAAIC,EAAQC,SAASF,EAAEG,OAAOF,OAC5BT,EAAWS,IAMmFA,MAAOV,IACpG,wBAAQG,UAAU,YAAYC,QAlBjB,WACbJ,EAAQE,GACXD,EAAWD,EAAU,IAgBlB,mBCdOa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.c4f83b43.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport { useState } from 'react';\nimport './App.css';\nfunction App() {\n\n  const [counter, setCounter] = useState(1);\n  const [maxValue, setMaxValue] = useState(1000);\n\n   const increment = () => {\n    if (counter<maxValue )\n     setCounter(counter + 1)\n   }\n   \n   const decrement = () => {\n     setCounter(counter - 1)\n   }\n\n   const handleInputChange =(e) =>{\n     let value = parseInt(e.target.value);\n       setCounter(value);\n   }\n\n  return (\n    <div className=\"outer-container\">\n        <button  className=\"box-first\" onClick={decrement}>-</button>\n        <input type =\"number\" min=\"1\" max=\"1000\" className=\"box-second\" onChange={handleInputChange} value={counter}/>\n        <button className=\"box-third\" onClick={increment}>+</button>\n        </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}